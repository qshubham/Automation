dfn info
dnf provides /bin/top
dnf check-upgrade 
dnf repoquery --list curl


Set the jane user account to expire on March 1, 2030.
sudo usermod -e 2030-03-01 jane

Create a system account called apachedev
sudo useradd --system apachedev

Jane's account i.e jane is expired.Unexpire the same and make sure it never expires again.
sudo usermod -e "" jane 

Create a user account called jack and set its default login shell to be /bin/csh.
sudo useradd --shell=/bin/csh jack

Delete the user account called jack and ensure his home directory is removed.
sudo userdel -r jack

Mark the password for jane as expired to force her to immediately change it the next time she logs in.
sudo chage --lastday 0 jane


Add the user jane to the group called developers
sudo usermod -a -G developers jane

Create a group named cricket and set its GID to 9875
sudo groupadd -g 9875 cricket

You already created group cricket in the previous question, now rename this group to soccer while preserving the same GID.
sudo groupmod -n soccer cricket

Create a user sam with UID 5322, also make it a member of soccer group.
sudo useradd  -G soccer sam --uid=5322

Update primary group of user sam and set it to rugby
sudo usermod -g rugby sam

Lock the user account called sam
sudo usermod -L sam

Delete the group called appdevs
sudo groupdel appdevs

Make sure the user jane gets a warning at least 2 days before the password expires.
sudo chage -W 2 jane


How can we print the value of an environment variable?
echo $MYVAR

Which of the following environment variables holds the value of user's home directory?
$HOME

Which of the following files can be used to set the globally available environment variables in a Linux based system?
/etc/environment

Print our current user's (bob) environment and save the output in /home/bob/env file.
env > /home/bob/env

Add an environment variable for user bob.


The variable name should be MYVAR and its value should be TRUE
vi ~/.bashrc
export MYVAR=TRUE
source ~/.bashrc


Identify the value of GLOBALENV environment variable and save the same in /home/bob/globalenv file
echo $GLOBALENV > /home/bob/globalenv


Whenever we add a new user to the system, some files are copied, from a template directory to the user's home directory.
Manually copy those files into /home/bob/default_data directory
sudo cp /etc/skel/.bash*	/home/bob/default_data


Modify the system-wide environment file and make sure that the variable GLOBALOPTION is set to this value: ON. Otherwise said, after you modify that file, any user that logs in and types
echo $GLOBALOPTION
should get this result:
ON
sudo vi /etc/environment/
GLOBALOPTION=ON
source /etc/environment


Make sure that this command gets executed for any user that logs in to the system:
echo Welcome to our server!
sudo vi /etc/profile.d/welcome.sh
echo "Welcome to our server! "

Make sure that every time a new user account is added to the system, a file called README is copied to the new user's home directory.
Whenever we create a new user in Linux the files in /etc/skel directory get copied into the user's home, so we can create a README in /etc/skel directory so that it gets copied to the newly created user's home.
Execute below given command to do so:


Set a variable named LFCS with value Welcome to the KodeKloud LFCS Labs! for every user that logs into this system.
sudo vi /etc/environment
LFCS=Welcome to the KodeKloud LFCS Labs!
source /etc/environment

Update the value of $PATH variable for user bob to include $HOME/.config/bin location in the path.
sudo vi /home/bob/.bashrc
PATH="$HOME/.local/bin:$HOME/bin:$HOME/.config/bin:$PATH"
source ~/.bashrc



from below, which keyword can we use to limit the number of processes a user can run?
nproc

how will we allow user trinity to run command without sudo
sudo gpasswd -a trinity wheel 

Modify the security limits file and make sure that the user called trinity can run no more than 30 processes in her session.
This should be both a hard limit and a soft limit, written in a single line.
vi /etc/security/limits.conf
trinity - nproc 30


Identify all the security limits currently applied in our user's session and save the same in /home/bob/limits file.
ulimit -a > /home/bob/limits

Modify the sudoers file in such a way to allow the user called trinity to run any sudo command without needing to provide her password.
sudo isudo /etc/sudoers
trinity ALL=(ALL) NOPASSWD: ALL
save and exit.

Modify the sudoers file again. Remove your previous entry for the user called trinity if it still exists.
Now add a new entry that allows trinity to only run the /usr/bin/mount command with sudo.
suddo visudo /etc/sudoers
trinity ALL=(ALL) /usr/bin/mount 

Make changes in security limits file for user stephen so that he can create maximum filesize upto 4 MB. This should be a hard limit.
sudo  vi /etc/security/limits.conf
stephen hard fsize 4096

Set a soft limit of 20 processes for everyone in the salesteam group.
sudo vi /etc/security/limits.conf
@salesteam     soft    nproc     20


Define a policy for all the users in the salesteam group to run any sudo command.
sudo vi /etc/sudoers
%salesteam     ALL=(ALL)     ALL

Define a policy, so that user trinity be able to run sudo commands as the user sam.
sudo vi /etc/sudoers
trinity ALL=(sam) ALL


We applied a hard limit of 10 processes for all the users under developers group, but somehow the limit isn't working. Look into the issue and fix the same.
sudo vi /etc/security/limits.conf
@developers     hard    nproc  10


Modify the sudoers file again. Remove your previous entry for the user called trinity if it still exists.
Now add a new entry that allows trinity to run all commands with sudo, but only after entering the password.
sudo visudo /etc/sudoers
trinity ALL=(ALL) ALL

Where do we configure static hostname resolution?
cat /etc/hosts

How do we see what processes on our system are listening for incoming network connections, on the TCP and UDP protocols?
ss -tulnp

Identify the IP address of the eth0 interface on our current system.
Create a file called /home/bob/ip and save the ip address value (without subnet) in it.
ip a
vi /home/bob/ip

Identify the default gateway on this system and store the output (only the IP address) in /home/bob/gateway.txt file
ip route show
vi /home/bob/gateway.txt

Find out what process is listening for incoming connections on port 22, and identify its PID.
Create a file called /home/bob/pid and save the PID value in it.
ss -tlnp |grep 22 > /home/bob/pid

Now, find out what process is listening for incoming connections on port 67, and identify its PID.
Create a file called /home/bob/process_pid and save the PID value in i
sudo ss -tulnp| grep :67 

So now let's try to identify the process name based on the port it's listening on, find out the process name that is listening for incoming connections on port 8080.
netstat -natp | grep 8080

Configure static resolution so that example.com hostname resolves to IP address 8.8.8.8.
echo "8.8.8.8 example.com " > /etc/hosts

Our system uses dynamic network configuration. Leave it as it is, dynamically configured, but add an extra IP to eth1 interface on this system: 10.0.0.50/24.
sudo ip a add 10.0.0.50/24 dev eth1
sudo nmcli device reapply eth1

Check the network route of this system and store the output in /home/bob/route.txt file.
sudo ip route show > /home/bob/route.txt


Get the list of all incoming open ports on this system and store the output in /home/bob/incoming.txt file.
sudo netstat -tulpn | grep LISTEN > /home/bob/incoming.txt

Add a new DNS resolver 8.8.8.8 on this system.
sudo vi /etc/resolv.conf
nameserver 8.8.8.8

Identify the transient hostname of this system and save the value in /home/bob/t-hostname file.
hostnamectl > /home/bob/t-hostname

Now, update the static hostname to match the transient hostname on this system.
hostnamectl set-hostname 


Allow Permanent TCP incoming connections to port 7869
sudo firewall-cmd --add-port=7869/tcp --permanenty

Add a permanent firewall rule to allow the https service.
sudo firewall-cmd	--add-service=https --permanent

Use firewall-cmd to list all current firewall rules. You will see UDP traffic to a certain port has been enabled. The rule is temporary, not permanent (runtime rule that disappears at next boot). Remove the firewall rule that allows traffic to this port number.
sudo firewall-cmd --remove-port=53/udp --permanent

Allow all traffic that is coming from any IP in this network range: 10.11.12.0 to 10.11.12.255 (i.e 10.11.12.0/24), add the required rule in the trusted zone and the rule must be permanent.
sudo firewall-cmd --add-source=10.11.12.0/24 --zone=trusted --permanent

There are a couple of rules we added in the firewall but those are just runtime rules (not permanent).
Make all of these runtime rules permanent.
sudo firewall-cmd --runtime-to-permanent


Temporarily route all traffic that must reach the 192.168.0.* network through the device that has the IP 172.28.128.100
sudo ip route add 192.168.0.0/24 via 172.28.128.100

Now, permanently route all traffic that must reach the 192.168.0.* network through the device that has the IP 172.28.128.100
Also tell the NetworkManager to immediately apply the network settings we just changed.
sudo nmcli connection modify eth1 +ipv4.routes "192.168.0.0/24 172.28.128.100"
sudo nmcli device reapply eth1


Delete the route you just created in the previous question to permanently route all traffic that must reach the 192.168.0.* network through the device that has the IP 172.28.128.100
Also tell the NetworkManager to immediately apply the network settings we just changed.
sudo nmcli connection modify eth1 -ipv4.routes "192.168.0.0/24 172.28.128.100"
sudo nmcli device reapply eth1


Check out the route table and find out the default gateway for eth0 connection on this system and store the output (only the IP address) in /home/bob/gateway.txt file.
ip route show


This system uses dynamic network configuration. We won't change that, but add an extra IP to eth1 interface on this system: 10.0.0.50/24.
sudo ip a add 10.0.0.50/24 dev eth1

Check all available timezones on this system and filter out American timezones only (for example America/Phoenix, America/Santiago etc).
Further save the filtered output in /home/bob/america file.
CheckCompleteIncomplete
timedatectl list-timezones | grep America > /home/bob/america

Configure the timezone on this system and set it to Asia/Kolkata:
sudo timedatectl set-timezone Asia/Kolkata

Configure the system to automatically synchronize its time through the chrony daemon. Make sure the daemon is enabled so that it automatically starts every time the system boots.
sudo timedatectl set-ntp=true
sudo systemctl enable chronyd

Using timedatectl configure RTC (real-time clock) to maintain the RTC in local time.
RTC is a battery-powered computer clock that keeps track of the time even when the system is turned off.

sudo timedatectl set-local-rtc 1


Which is the configuration file of our Bind DNS server?
/etc/named.conf

Where does bind DNS server store all zone files on a RedHat based linux machine?
/var/named

Install bind DNS server on this system.
dnf install bind bind-utils

Configure the Bind daemon to accept queries from any IP on the Internet. Make sure to start named service after making required changes in the configuration.

sudo vi /etc/named.conf
Add below given line in it under recursing-file "/var/named/data/named.recursing"; line
allow-query    { 0.0.0.0/0; };
Start named.service:
sudo systemctl start named.service

We have added a new zone file /var/named/example.com.zone which contains DNS configuration for example.com domain.
Query the local DNS server and identify the current A record value for example.com domain. (without updating any relevant configuration) and save the value in /home/bob/a-record file. (only the IP address)
CheckCompleteIncomplete

dig @localhost example.com


You might have noticed that in the previous question, the A record value for example.com domain is different what we have in /var/named/example.com.zone DNS zone file. Which means, this file isn't in use yet or DNS server hasn't read it yet.
Make the required changes so that the local zone file changes can take effect.
CheckCompleteIncomplete

sudo vi /etc/named.conf
Add below given block at the end of the file:
zone    "example.com" IN {
        type master;
        file "example.com.zone";
};
sudo systemctl restart named.service


Modify /var/named/example.com.zone and add a new entry so that this subdomain
database.example.com
has this IP address: 1.2.3.4
Don't forget to restart the named.service after you've made your change.

sudo vi  /var/named/example.com.zone
and add below given line in it:
database                A       1.2.3.4
sudo systemctl restart named.service


Modify /var/named/example.com.zone and make mysql.example.com an alias for database.example.com by adding the proper CNAME entry. Otherwise said, mysql.example.com should point to database.example.com. Restart the named.service after you've added the new entry.
sudo vi  /var/named/example.com.zone
mysql.example.com CNAME database.example.com.
sudo systemctl restart named.service


By default the bind server also fetches DNS data from other DNS servers on the Internet, when it does not have it available in its own cache. But somehow our bind server is not able to query the kodekloud.com domain data.

sudo vi /etc/named.conf
Look for recursion and make sure its value is set to yes
recursion yes;
sudo systemctl restart named.service

Using dig utility retrieve all record types (including MX, TXT etc) associated with our example.com domain and save the output in /home/bob/records file.
dig @localhost -q example.com ANY > /home/bob/records

Change the TTL for example.com domain to tell other DNS servers that, they may query our zone to cache this data for 2 hours.
sudo vi /var/named/example.com.zone
In the beginning of the file change $TTL value from 1H to 2H
$TTL 2H
sudo systemctl restart named.service



In what file can we edit the settings of our SSH server?
/etc/ssh/sshd_config

In a squid proxy server, what does this line do?
http_access allow localnetwork

 It makes it accept incoming connections from whatever was defined in the ACL named "localnetwork"

Edit the configuration of the SSH server and disable password logins.
vi /etc/ssh/sshd_config
PermitRootAuthentication no 
systemctl status restart	sshd

Edit the system-wide configuration of the SSH client and turn on X11 forwarding.
sudo vi /etc/ssh/sshd_config
x11forwarding yes
sudo systemctl restart sshd

Install squid proxy server on this system and start its service.
sudo dnf install squid
sudo systemctl restart squid

Edit the config file of the Squid proxy daemon. Modify it to deny access to the IP addresses defined in the ACL called localnet
sudo vi /etc/squid/squid.conf 
And change http_access allow localnet line to http_access deny localnet
http_access deny localnet



Edit the configuration of the Squid proxy daemon. Add a src type acl and name it vpn. The IP you should use in this acl is 203.0.110.5. Now add a new rule that tells the proxy server to allow access to the acl named vpn.
sudo vi /etc/squid/squid.conf
Add this line
acl vpn src 203.0.110.5
Add below given line in the same file before http_access deny all line:
http_access allow vpn


Edit the configuration of the SSH server and configure it to use only IPv4 IP address family.
sudo vi /etc/ssh/sshd_config
Uncomment the below given line in it:
#AddressFamily any
and change it to (add it if doesn't exist):
AddressFamily inet

Edit the configuration of the Squid proxy daemon. Now add a new rule that allow http access to the external
sudo vi /etc/squid/squid.conf
Add below given line in this file after http_access allow localhost line:
http_access allow external


Edit the configuration of the Squid proxy daemon , add an acl and http access rule to block facebook.com.
sudo vi /etc/squid/squid.cong
acl facebook dstdomain .facebook.com
And add below given line after http_access allow localhost line:
http_access deny facebook 
Edit the configuration of the SSH server and re-enable password logins, but disable the SSH login for user root.
vi /etc/ssh/sshd_config
PermitRootAuthentication yes 
passwordAuthentication yes
PermitRootLogin no 
systemctl status restart	sshd

In configuration file of the SSH server, change the maximum number of authentication attempts permitted per connection to 4
sudo vi /etc/ssh/sshd_config
Uncomment below given line or add it if doesn't exist:
MaxAuthTries 4
sudo systemctl restart sshd


--------Storage LAB -----------------------------
How do we display block devices, such as disks or partitions?
lsblk

How do we format a partition as swap space?
mkswap /dev/vdb3

Identify the partition name of the virtual disk where / is mounted on this system
lsblk

Find out the swapfile used on this system and save its exact path in /home/bob/swap file. 
swapon --show               

                                                                                                                                                          Create three primary partitions on /dev/vdb.

Create three primary partitions on /dev/vdb.
First should have 10MB, second should have 21MB and the third should have 15MB.
sudo cfdisk /dev/vdb
lsblk

Format the 21MB partition as swap. Next, make it active, tell Linux to start using it as swap memory.
sudo mkswap /dev/vdb2
sudo swapon /dev/vdb2
sudo swapon --show

Tell Linux to stop using the 21MB partition as swap.
sudo swapoff /dev/vdb2

Increase the existing swap (i.e /swapfile) size by 1GB.
sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 oflag=append conv=notrunc
Disable the swap file:
sudo swapoff /swapfile
Setup the file as a swap file again.
sudo mkswap /swapfile
Enable again swaping:
sudo swapon /swapfile



------------------------------Create File System and mount----------------------------------------------
What file do we need to edit to tell the Linux OS which filesystems it should automatically mount when it boots up?
/etc/fstab

We want to create an xfs filesystem on /dev/vdb1 with the label BackupVolume. What is wrong with this command?
sudo mkfs.xfs -l "BackupVolume" /dev/vdb1
The lowercase -l option is wrong. It should be -L, with an uppercase L.

Create an xfs filesystem with the label "DataDisk" on /dev/vdb.
sudo mkfs.xfs -L "DataDisk" /dev/vdb

Create an ext4 filesystem with a number of 2048 inodes on /dev/vdc.
sudo mkfs.ext4 -N 2048 /dev/vdc

Mount /dev/vdb in the /mnt/ directory.
sudo mount /dev/vdb /mnt/

Unmount the filesystem mounted in the /mnt/ directory.
sudo umount  /mnt/

Configure the system to automatically mount /dev/vdc when it boots up. This partition has an ext4 filesystem on it. It should mount the filesystem to the /test directory. This directory does not exist, make sure you create it first.
Also make sure this filesystem should be checked on boot.
sudo mkdir /test
sudo mount /dev/vdc /test/
vi /etc/fstab
/dev/vdc /test ext4 defaults 0 2

Configure the system to automatically use /dev/vdb as swap when it boots up.
For now you need not to reboot the system after making the required changes
vi /etc/fstab
/dev/vdb none swap defaults 0 0
reboot

Change the label for /dev/vdb filesystem to SwapFS
sudo  xfs_admin -L "SwapFS" /dev/vdb


--------------------------------Manage lvm and encrypted Storage--------------------------------------------------
Install lvm on this system.
sudo dnf install lvm2

Add these four disks as PVs (Physical Volumes) to LVM: /dev/vdb, /dev/vdc, /dev/vdd and /dev/vde.
sudo pvcreate /dev/vdb /dev/vdc /dev/vdd /dev/vde

Use the correct command to display a list of Physical Volumes (PVs) used by LVM. What is the PSize of /dev/vdc? Save the value in /home/bob/pvsize file.
sudo pvs 
vi /home/bob/pvsize

Remove the /dev/vde physical volume from LVM.
sudo pvremove /dev/vde

Create a Volume Group (VG) named volume1. It should be created on these two Physical Volumes: /dev/vdb and /dev/vdc.
sudo vgcreate volume1 /dev/vdb /dev/vdc

Imagine that our volume group, volume1 is running out of free space. It currently uses /dev/vdb and /dev/vdcto store data. Add /dev/vdd to this volume group so that we gain more usable storage space.

sudo vgextend volume1 /dev/vdd   (vgextend for adding volume disk ) 

Remove /dev/vdd from the volume group volume1.
sudo vgreduce  volume1 /dev/vdd

Use the command that displays all of the volume groups. What is the VSize of volume1?
sudo vgs

Create a Logical Volume (LV). It should have these properties:
1. The size of the LV should be 1.5 Gigabytes.
2. Its name should be smalldata.
3. The logical volume should be created on the volume group named volume1.

sudo lvcreate --size 1.5G --name smalldata volume1

Resize the Logical Volume called smalldata to 1 Gigabyte.
This logical volume resides on the volume group called volume1.
sudo lvresize --size 1G volume1/smalldata

Create an XFS filesystem on the logical volume called smalldata.
This logical volume exists on the volume group called volume1.

sudo mkfs.xfs /dev/volume1/smalldata


Destroy/Remove the Logical Volume called smalldata.
sudo lvremove smalldata

dfn info
dnf provides /bin/top
dnf check-upgrade 
dnf repoquery --list curl


Set the jane user account to expire on March 1, 2030.
sudo usermod -e 2030-03-01 jane

Create a system account called apachedev
sudo useradd --system apachedev

Jane's account i.e jane is expired.Unexpire the same and make sure it never expires again.
sudo usermod -e "" jane 

Create a user account called jack and set its default login shell to be /bin/csh.
sudo useradd --shell=/bin/csh jack

Delete the user account called jack and ensure his home directory is removed.
sudo userdel -r jack

Mark the password for jane as expired to force her to immediately change it the next time she logs in.
sudo chage --lastday 0 jane


Add the user jane to the group called developers
sudo usermod -a -G developers jane

Create a group named cricket and set its GID to 9875
sudo groupadd -g 9875 cricket

You already created group cricket in the previous question, now rename this group to soccer while preserving the same GID.
sudo groupmod -n soccer cricket

Create a user sam with UID 5322, also make it a member of soccer group.
sudo useradd  -G soccer sam --uid=5322

Update primary group of user sam and set it to rugby
sudo usermod -g rugby sam

Lock the user account called sam
sudo usermod -L sam

Delete the group called appdevs
sudo groupdel appdevs

Make sure the user jane gets a warning at least 2 days before the password expires.
sudo chage -W 2 jane


How can we print the value of an environment variable?
echo $MYVAR

Which of the following environment variables holds the value of user's home directory?
$HOME

Which of the following files can be used to set the globally available environment variables in a Linux based system?
/etc/environment

Print our current user's (bob) environment and save the output in /home/bob/env file.
env > /home/bob/env

Add an environment variable for user bob.


The variable name should be MYVAR and its value should be TRUE
vi ~/.bashrc
export MYVAR=TRUE
source ~/.bashrc


Identify the value of GLOBALENV environment variable and save the same in /home/bob/globalenv file
echo $GLOBALENV > /home/bob/globalenv


Whenever we add a new user to the system, some files are copied, from a template directory to the user's home directory.
Manually copy those files into /home/bob/default_data directory
sudo cp /etc/skel/.bash*	/home/bob/default_data


Modify the system-wide environment file and make sure that the variable GLOBALOPTION is set to this value: ON. Otherwise said, after you modify that file, any user that logs in and types
echo $GLOBALOPTION
should get this result:
ON
sudo vi /etc/environment/
GLOBALOPTION=ON
source /etc/environment


Make sure that this command gets executed for any user that logs in to the system:
echo Welcome to our server!
sudo vi /etc/profile.d/welcome.sh
echo "Welcome to our server! "

Make sure that every time a new user account is added to the system, a file called README is copied to the new user's home directory.
Whenever we create a new user in Linux the files in /etc/skel directory get copied into the user's home, so we can create a README in /etc/skel directory so that it gets copied to the newly created user's home.
Execute below given command to do so:


Set a variable named LFCS with value Welcome to the KodeKloud LFCS Labs! for every user that logs into this system.
sudo vi /etc/environment
LFCS=Welcome to the KodeKloud LFCS Labs!
source /etc/environment

Update the value of $PATH variable for user bob to include $HOME/.config/bin location in the path.
sudo vi /home/bob/.bashrc
PATH="$HOME/.local/bin:$HOME/bin:$HOME/.config/bin:$PATH"
source ~/.bashrc



from below, which keyword can we use to limit the number of processes a user can run?
nproc

how will we allow user trinity to run command without sudo
sudo gpasswd -a trinity wheel 

Modify the security limits file and make sure that the user called trinity can run no more than 30 processes in her session.
This should be both a hard limit and a soft limit, written in a single line.
vi /etc/security/limits.conf
trinity - nproc 30


Identify all the security limits currently applied in our user's session and save the same in /home/bob/limits file.
ulimit -a > /home/bob/limits

Modify the sudoers file in such a way to allow the user called trinity to run any sudo command without needing to provide her password.
sudo isudo /etc/sudoers
trinity ALL=(ALL) NOPASSWD: ALL
save and exit.

Modify the sudoers file again. Remove your previous entry for the user called trinity if it still exists.
Now add a new entry that allows trinity to only run the /usr/bin/mount command with sudo.
suddo visudo /etc/sudoers
trinity ALL=(ALL) /usr/bin/mount 

Make changes in security limits file for user stephen so that he can create maximum filesize upto 4 MB. This should be a hard limit.
sudo  vi /etc/security/limits.conf
stephen hard fsize 4096

Set a soft limit of 20 processes for everyone in the salesteam group.
sudo vi /etc/security/limits.conf
@salesteam     soft    nproc     20


Define a policy for all the users in the salesteam group to run any sudo command.
sudo vi /etc/sudoers
%salesteam     ALL=(ALL)     ALL

Define a policy, so that user trinity be able to run sudo commands as the user sam.
sudo vi /etc/sudoers
trinity ALL=(sam) ALL


We applied a hard limit of 10 processes for all the users under developers group, but somehow the limit isn't working. Look into the issue and fix the same.
sudo vi /etc/security/limits.conf
@developers     hard    nproc  10


Modify the sudoers file again. Remove your previous entry for the user called trinity if it still exists.
Now add a new entry that allows trinity to run all commands with sudo, but only after entering the password.
sudo visudo /etc/sudoers
trinity ALL=(ALL) ALL

Where do we configure static hostname resolution?
cat /etc/hosts

How do we see what processes on our system are listening for incoming network connections, on the TCP and UDP protocols?
ss -tulnp

Identify the IP address of the eth0 interface on our current system.
Create a file called /home/bob/ip and save the ip address value (without subnet) in it.
ip a
vi /home/bob/ip

Identify the default gateway on this system and store the output (only the IP address) in /home/bob/gateway.txt file
ip route show
vi /home/bob/gateway.txt

Find out what process is listening for incoming connections on port 22, and identify its PID.
Create a file called /home/bob/pid and save the PID value in it.
ss -tlnp |grep 22 > /home/bob/pid

Now, find out what process is listening for incoming connections on port 67, and identify its PID.
Create a file called /home/bob/process_pid and save the PID value in i
sudo ss -tulnp| grep :67 

So now let's try to identify the process name based on the port it's listening on, find out the process name that is listening for incoming connections on port 8080.
netstat -natp | grep 8080

Configure static resolution so that example.com hostname resolves to IP address 8.8.8.8.
echo "8.8.8.8 example.com " > /etc/hosts

Our system uses dynamic network configuration. Leave it as it is, dynamically configured, but add an extra IP to eth1 interface on this system: 10.0.0.50/24.
sudo ip a add 10.0.0.50/24 dev eth1
sudo nmcli device reapply eth1

Check the network route of this system and store the output in /home/bob/route.txt file.
sudo ip route show > /home/bob/route.txt


Get the list of all incoming open ports on this system and store the output in /home/bob/incoming.txt file.
sudo netstat -tulpn | grep LISTEN > /home/bob/incoming.txt

Add a new DNS resolver 8.8.8.8 on this system.
sudo vi /etc/resolv.conf
nameserver 8.8.8.8

Identify the transient hostname of this system and save the value in /home/bob/t-hostname file.
hostnamectl > /home/bob/t-hostname

Now, update the static hostname to match the transient hostname on this system.
hostnamectl set-hostname 